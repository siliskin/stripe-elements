diff --git a/node_modules/@morbidick/lit-element-notify/index.d.ts b/node_modules/@morbidick/lit-element-notify/index.d.ts
new file mode 100644
index 0000000..22509db
--- /dev/null
+++ b/node_modules/@morbidick/lit-element-notify/index.d.ts
@@ -0,0 +1,7 @@
+export { LitNotify } from './notify';
+
+declare module 'lit-element/lib/updating-element' {
+  interface PropertyDeclaration {
+    notify?: string|boolean;
+  }
+}
diff --git a/node_modules/@morbidick/lit-element-notify/notify.d.ts b/node_modules/@morbidick/lit-element-notify/notify.d.ts
new file mode 100644
index 0000000..6e92e9c
--- /dev/null
+++ b/node_modules/@morbidick/lit-element-notify/notify.d.ts
@@ -0,0 +1,5 @@
+import type { PropertyDeclaration, LitElement } from 'lit-element';
+
+type Constructor<T = {}> = new (...args: any[]) => T;
+
+export function LitNotify<T extends Constructor<LitElement>>(superclass: T): T;
diff --git a/node_modules/@morbidick/lit-element-notify/notify.js b/node_modules/@morbidick/lit-element-notify/notify.js
index b6790b2..7a3ba90 100644
--- a/node_modules/@morbidick/lit-element-notify/notify.js
+++ b/node_modules/@morbidick/lit-element-notify/notify.js
@@ -25,7 +25,7 @@ export const LitNotify = (baseElement) => class extends baseElement {
     static createProperty(name, options) {
         super.createProperty(name, options);
 
-        if (!this.hasOwnProperty('_propertyEventMap')) {
+        if (!this._propertyEventMap) {
             this._propertyEventMap = new Map();
         }
 
@@ -50,8 +50,8 @@ export const LitNotify = (baseElement) => class extends baseElement {
                     detail: {
                         value: this[eventProp],
                     },
-                    bubbles: false,
-                    composed: true,
+                    bubbles: true,
+                    composed: false,
                 }));
             }
         }
